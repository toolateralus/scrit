let a = 0
let b = 0.0
let c = false
let d = undefined
let e = null
let f = (0,)
let g = (0,0)
let h = func(j:int) {}
let i = func() -> int {
  let inner = 0
}


let j => { return 0 } // fails to get type info
let k => 1
let l = {}
let m = []
let n = { something : object = this }
let o = [0, 1, 2]

println(a)
println(b)
println(c)
println(d)
println(e)
println(f)
println(g)
println(h)
println(i)
println(j)
println(k)
println(l)
println(m)
println(n)
println(n.something)
println(o)

println("\nbegin types\e[33m\n")

println(a.type())
println(b.type())
println(c.type())
println(d.type())
println(e.type())
println(f.type())
println(g.type())
println(h.type())
println(i.type())
println(j.type())
println(k.type())
println(l.type())
println(m.type())
println(n.type())
println(n.something.type())
println(o.type())
println("\n\e[0mend types\n")